#********************************************************************************
# Copyright (c) 2023 T-Systems International GmbH
# Copyright (c) 2023 Contributors to the Eclipse Foundation
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
# SPDX-License-Identifier: Apache-2.0
#*******************************************************************************

openapi: 3.0.1
info:
  title: Auto setup API information
  description: This Service handles all auto setup related operations
  version: '1.0'
servers:
- url: https://orchestrator.int.cx.dih-cloud.com
  description: Generated server url
security:
- bearerAuth: []
tags:
- name: AutoSetup
  description: Auto setup controller to perform all operation
paths:
  /autosetup/{executionId}:
    get:
      tags:
      - AutoSetup
      summary: Check Auto setup execution status
      description: This API will use to check/verify Auto setup process execution status
      operationId: getCheckDetails
      parameters:
      - name: executionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AutoSetupResponse'
    put:
      tags:
      - AutoSetup
      summary: Update existing autosetup packages
      description: This API will use to update the existing packages created by the Auto setup process
      operationId: updatePackage
      parameters:
      - name: executionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoSetupRequest'
        required: true
      responses:
        '200':
          description: Updated
          content:
            '*/*':
              schema:
                type: string
                format: uuid
    delete:
      tags:
      - AutoSetup
      summary: Delete autosetup packages
      description: This API will use to delete the existing packages created by the Auto setup process
      operationId: deletePackage
      parameters:
      - name: executionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Deleted
          content:
            '*/*':
              schema:
                type: string
                format: uuid
  /internal/catalog-service:
    get:
      tags:
      - app-details-controller
      summary: This will get all catalog service in auto setup database for auto setup
      description: This will get all catalog service in auto setup database for auto setup
      operationId: getAllCatalogService
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                maxItems: 3
                items:
                  $ref: '#/components/schemas/AppServiceCatalog'
    post:
      tags:
      - app-details-controller
      summary: This will create catalog service in auto setup database for auto setup
      description: This will create catalog service in auto setup database for auto setup
      operationId: createCatalogService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppServiceCatalogPojo'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppServiceCatalog'
  /internal/catalog-service-mapping:
    get:
      tags:
      - app-details-controller
      summary: This will get catalog service mapping with customer in auto setup database for auto setup
      description: This will get catalog service mapping with customer in auto setup database for auto setup
      operationId: getAllCatalogServiceMapping
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                maxItems: 3
                items:
                  $ref: '#/components/schemas/AppServiceCatalogAndCustomerMapping'
    post:
      tags:
      - app-details-controller
      summary: This will create catalog service mapping with customer in auto setup database for auto setup
      description: This will create catalog service mapping with customer in auto setup database for auto setup
      operationId: createCatalogServiceMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppServiceCatalogAndCustomerMappingPojo'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppServiceCatalogAndCustomerMapping'
  /internal/app-details:
    get:
      tags:
      - app-details-controller
      summary: This will fetch all app details in kubeapps
      description: This will fetch all app details in kubeapps
      operationId: getAllAppInfo
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                maxItems: 3
                items:
                  $ref: '#/components/schemas/AppDetails'
    post:
      tags:
      - app-details-controller
      summary: This will create/update app in kubeapps
      description: This will create/update app in kubeapps
      operationId: createOrUpdateAppInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDetailsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppDetails'
  /autosetup:
    post:
      tags:
      - AutoSetup
      summary: Start autosetup process
      description: This API will use to start the Auto setup process
      operationId: createPackage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoSetupRequest'
        required: true
      responses:
        '200':
          description: Created
          content:
            '*/*':
              schema:
                type: string
                format: uuid
  /internal:
    get:
      tags:
      - AutoSetup
      operationId: getAllInstallPackages
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /internal/trigger:
    get:
      tags:
      - trigger-details-controller
      summary: Fetch all the orchestrator requests
      description: This will fetch all orchestrator request and their details
      operationId: getAllTriggers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                maxItems: 3
                items:
                  $ref: '#/components/schemas/AutoSetupTriggerResponse'
  /internal/trigger/{triggerId}:
    get:
      tags:
      - trigger-details-controller
      summary: Fetch specific the orchestrator requests
      description: This will fetch specific orchestrator request and their details using trigger id in parth variable
      operationId: getTriggerDetails
      parameters:
      - name: triggerId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AutoSetupTriggerResponse'
  /internal/catalog-service/{id}:
    get:
      tags:
      - app-details-controller
      summary: This will get catalog service in auto setup database for auto setup
      description: This will get catalog service in auto setup database for auto setup
      operationId: getCatalogService
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppServiceCatalog'
  /internal/catalog-service-mapping/{id}:
    get:
      tags:
      - app-details-controller
      summary: This will get catalog service mapping with customer in auto setup database for auto setup
      description: This will get catalog service mapping with customer in auto setup database for auto setup
      operationId: getCatalogServiceMapping
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppServiceCatalogAndCustomerMapping'
  /internal/app-details/{appName}:
    get:
      tags:
      - app-details-controller
      summary: This will fetch specific app details in kubeapps
      description: This will fetch specific app details in kubeapps
      operationId: getAppInfo
      parameters:
      - name: appName
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppDetails'
components:
  schemas:
    AutoSetupRequest:
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        properties:
          $ref: '#/components/schemas/CustomerProperties'
    Customer:
      required:
      - country
      - email
      - organizationName
      type: object
      properties:
        organizationName:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9 !#''$@&%()*+,\-_./:;=<>?\[\]\\^]{2,50}+'
          type: string
        organizationUnitName:
          type: string
        email:
          type: string
        contactNumber:
          type: string
        tanNumber:
          type: string
        registrationNumber:
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
    CustomerProperties:
      required:
      - bpnNumber
      - serviceId
      - subscriptionId
      type: object
      properties:
        bpnNumber:
          pattern: '[a-zA-Z0-9\_\-]+'
          type: string
        subscriptionId:
          pattern: '[a-zA-Z0-9\_\-]+'
          type: string
        serviceId:
          pattern: '[a-zA-Z0-9\_\-]+'
          type: string
        role:
          type: string
    AppServiceCatalogPojo:
      required:
      - canonicalServiceId
      - name
      - serviceTools
      - workflow
      type: object
      properties:
        canonicalServiceId:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        name:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        workflow:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        serviceTools:
          pattern: "[a-zA-ZÃ€-Ã¿0-9 \"$\n\t\\{\\},\\-_./:=\\[\\]]+"
          type: string
    AppServiceCatalog:
      type: object
      properties:
        canonicalServiceId:
          type: string
        name:
          type: string
        workflow:
          type: string
        serviceTools:
          type: string
    AppServiceCatalogAndCustomerMappingPojo:
      required:
      - canonicalId
      - customer
      - serviceId
      type: object
      properties:
        customer:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        serviceId:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        serviceCatalog:
          $ref: '#/components/schemas/AppServiceCatalogPojo'
        canonicalId:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
    AppServiceCatalogAndCustomerMapping:
      type: object
      properties:
        customer:
          type: string
        serviceId:
          type: string
        serviceCatalog:
          $ref: '#/components/schemas/AppServiceCatalog'
        canonicalId:
          type: string
    AppDetailsRequest:
      required:
      - appName
      - contextCluster
      - contextNamespace
      - expectedInputData
      - packageIdentifier
      - packageVersion
      - pluginName
      - pluginVersion
      - requiredYamlConfiguration
      - yamlValueFieldType
      type: object
      properties:
        appName:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        contextCluster:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        contextNamespace:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        packageIdentifier:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_./]+'
          type: string
        pluginName:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_./]+'
          type: string
        pluginVersion:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_./]+'
          type: string
        packageVersion:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_./]+'
          type: string
        expectedInputData:
          pattern: "[a-zA-ZÃ€-Ã¿0-9 \"$\n\t\\{\\},\\-_./:=\\[\\]]+"
          type: string
        outputData:
          pattern: '[a-zA-ZÃ€-Ã¿0-9][a-zA-ZÃ€-Ã¿0-9\-_]+'
          type: string
        requiredYamlConfiguration:
          pattern: "[a-zA-ZÃ€-Ã¿0-9 \"$\n\t\\{\\},\\-_./:=\\[\\]]+"
          type: string
        yamlValueFieldType:
          pattern: "[a-zA-ZÃ€-Ã¿0-9 \"$\n\t\\{\\},\\-_./:=\\[\\]]+"
          type: string
    AppDetails:
      type: object
      properties:
        appName:
          type: string
        contextCluster:
          type: string
        contextNamespace:
          type: string
        packageIdentifier:
          type: string
        pluginName:
          type: string
        pluginVersion:
          type: string
        packageVersion:
          type: string
        expectedInputData:
          type: string
        outputData:
          type: string
        requiredYamlConfiguration:
          type: string
        yamlValueFieldType:
          type: string
    AutoSetupTriggerDetails:
      type: object
      properties:
        id:
          type: string
        step:
          type: string
        status:
          type: string
        action:
          type: string
        remark:
          type: string
        createdDate:
          type: string
          format: date-time
    AutoSetupTriggerResponse:
      type: object
      properties:
        triggerId:
          type: string
        triggerType:
          type: string
        organizationName:
          type: string
        autosetupTriggerDetails:
          type: array
          maxItems: 3
          items:
            $ref: '#/components/schemas/AutoSetupTriggerDetails'
        request:
          $ref: '#/components/schemas/AutoSetupRequest'
        processResult:
          type: array
          maxItems: 3
          items:
            type: object
        createdTimestamp:
          type: string
        modifiedTimestamp:
          type: string
        status:
          type: string
        remark:
          type: string
    AutoSetupResponse:
      type: object
      properties:
        executionId:
          type: string
        executionType:
          type: string
        request:
          $ref: '#/components/schemas/AutoSetupRequest'
        processResult:
          type: array
          maxItems: 3
          items:
            type: object
        status:
          type: string
          enum:
          - INPROGRESS
          - SUCCESS
          - FAILED
          - MANUAL_UPDATE_PENDING
        createdTimestamp:
          type: string
        modifiedTimestamp:
          type: string
        remark:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT